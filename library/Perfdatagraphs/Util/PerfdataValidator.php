<?php

namespace Icinga\Module\Perfdatagraphs\Util;

/**
 * PerfdataValidator is used to validate the the perfdata generated by a backend.
 *
 * @param array $perfdata
 * @param return ?array
 */
class PerfdataValidator
{

    /**
     * validate is used to validate the perfdata from the backends.
     */
    public static function validate(array $perfdata): ?array
    {
        if (!is_iterable($perfdata)) {
            return ['message' => 'invalid data received'];
        }

        if (!array_key_exists('data', $perfdata)) {
            return ['message' => 'does not contain data key'];
        }

        if (!is_iterable($perfdata['data'])) {
            return ['message' => 'does not contain iterable data'];
        }

        if (count($perfdata['data']) === 0) {
            return ['message' => 'does not contain datasets'];
        }

        foreach ($perfdata['data'] as $dataset) {
            if (!is_iterable($dataset)) {
                return ['message' => 'does not contain iterable dataset'];
            }

            if (!array_key_exists('title', $dataset)) {
                return ['message' => 'dataset does not contain title key'];
            }

            if (!array_key_exists('timestamps', $dataset)) {
                return ['message' => 'dataset does not contain timestamp key'];
            }

            if (!is_iterable($dataset['timestamps'])) {
                return ['message' => 'dataset does not contain iterable timestamps'];
            }

            if (count($dataset['timestamps']) === 0) {
                return ['message' => 'dataset does not contain any timestamps'];
            }

            if (!array_key_exists('series', $dataset)) {
                return ['message' => 'dataset does not contain series key'];
            }

            if (!is_iterable($dataset['series'])) {
                return ['message' => 'dataset does not contain iterable series'];
            }

            if (count($dataset['series']) === 0) {
                return ['message' => 'dataset does not contain any series'];
            }

            foreach ($dataset['series'] as $series) {
                if (!is_iterable($series)) {
                    return ['message' => 'data series is not iterable'];
                }

                if (!array_key_exists('name', $series)) {
                    return ['message' => 'data series does not contain name key'];
                }

                if (!array_key_exists('data', $series)) {
                    return ['message' => 'data series does not contain data key'];
                }

                if (!is_iterable($series['data'])) {
                    return ['message' => 'data series does not contain iterable data'];
                }

                if (count($series['data']) === 0) {
                    return ['message' => 'data series does not contain any data'];
                }
            }
        }

        return null;
    }
}
